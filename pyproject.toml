[tool.poetry]
name = "mtpy"
version = "0.1.0"
description = "A python based tool for Meltpool Tomography."
urls = { github = "https://github.com/Cian-H/I-Form_Server_Node_Deployer" }
authors = ["Cian Hughes <cian.hughes@dcu.ie>"]
readme = "README.md"
license = "MIT"
packages = [{ include = "mtpy", from = "src/python" }]

[tool.poetry.dependencies]
python = ">=3.9,<3.12" # "3.9.*"
# julia = "^0.5.7"
numpy = "*"
matplotlib = "*"
plotly = "*"
dask = { extras = ["distributed", "graphviz"], version = "*" }
tqdm = "*"
psutil = "*"
read_layers = { file = "wheels/read_layers-0.1.0-cp311-cp311-manylinux_2_34_x86_64.whl" }
pandas = "*"
tables = "*"
lz4 = "*"
bokeh = "*"
holoviews = "*"
datashader = "*"
jupyterlab = "*"
dash = "*"
jupyterlab-dash = "*"
openpyxl = "*"
odfpy = "*"
fsspec = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
memory-profiler = "*"
maturin = "*"
graphviz = "*"
bokeh = "*"
line-profiler = "*"
snakeviz = "*"
jupyter = "*"
ipykernel = "*"
pre-commit = "*"
mypy = "*"
lxml = "*"
pandas-stubs = "^2.2.0.240218"
types-tqdm = "^4.66.0.20240106"
types-psutil = "^5.9.5.20240205"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
\.venv/
|\.toml$
|\.sh$
|\.git$
|\.ini$
|\.json$
|\.txt$
|\.jl$
|\.rs$
|\.md$
'''

[tool.ruff]
# Same as Black.
line-length = 100
# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE",
    "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH",
    "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY",
    "UP", "YTT"
]
unfixable = []
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".hg", ".mypy_cache", ".nox", ".pants.d", ".pytype",
    ".ruff_cache", ".svn", ".tox", ".venv", "__pypackages__", "_build", "buck-out", "build",
    "dist", "node_modules", "venv", ".vscode"
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
extend-select = ["I"]

[tool.ruff.lint.isort]
force-sort-within-sections = true
lines-after-imports = 2

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["flet.*", "flet_core.*", "fsspec.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = [".venv/bin/python"]
