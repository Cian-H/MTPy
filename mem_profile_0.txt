Filename: /home/cian/Storage/Programming/Git_Projects/data_analysis_example.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    62    174.6 MiB    174.6 MiB           1   @profile(stream=logfile)
    63                                         def main():
    64                                             # Read the data files at dir_path
    65    279.4 MiB    104.9 MiB           1       mpt.read_layers()
    66                                         
    67                                             # Threshold data based on speed and temperature
    68    415.4 MiB    135.9 MiB           1       mpt.threshold_all_layers(thresh_functions, thresh_kwargs)
    69                                         
    70    445.4 MiB     30.1 MiB           1       mpt.detect_samples(81)  # detect contiguous samples
    71    484.4 MiB     38.9 MiB           1       mpt.separate_samples()  # noqa Separate detected samples into individual pointclouds
    72                                         
    73                                             # Save thresholded layers to figures
    74    757.3 MiB    272.9 MiB           2       mpt.layers_to_figures(f"{output_path}/{layer_subfolder}",
    75    484.4 MiB      0.0 MiB           1                             plot_w=True,
    76    484.4 MiB      0.0 MiB           1                             colorbar=True,
    77    484.4 MiB      0.0 MiB           1                             figureparams=figureparams,
    78    484.4 MiB      0.0 MiB           1                             scatterparams=scatterparams)
    79                                         
    80                                             # Create figures for every layer of every individual sample
    81   1273.6 MiB    516.3 MiB           2       mpt.samples_to_figures(f"{output_path}/{sample_subfolder}",
    82    757.3 MiB      0.0 MiB           1                              plot_w=True,
    83    757.3 MiB      0.0 MiB           1                              colorbar=True,
    84    757.3 MiB      0.0 MiB           1                              figureparams=figureparams,
    85    757.3 MiB      0.0 MiB           1                              scatterparams=scatterparams)
    86                                         
    87                                             # Create static 3d plot for entire build tray
    88   1876.3 MiB    602.7 MiB           2       mpt.layers_to_3dplot(f"{output_path}/{layer_subfolder}",
    89   1273.6 MiB      0.0 MiB           1                            plot_w=True,
    90   1273.6 MiB      0.0 MiB           1                            colorbar=True,
    91   1273.6 MiB      0.0 MiB           1                            figureparams=figureparams,
    92   1273.6 MiB      0.0 MiB           1                            plotparams=scatterparams)
    93                                         
    94                                             # Create static 3d plot for each individual sample
    95   2056.4 MiB    180.1 MiB           2       mpt.samples_to_3dplots(f"{output_path}/{sample_subfolder}",
    96   1876.3 MiB      0.0 MiB           1                              plot_w=True,
    97   1876.3 MiB      0.0 MiB           1                              colorbar=True,
    98   1876.3 MiB      0.0 MiB           1                              figureparams=figureparams,
    99   1876.3 MiB      0.0 MiB           1                              plotparams=scatterparams)
   100                                         
   101                                             # Create interactive 3d plot for entire build tray
   102   2493.5 MiB    437.1 MiB           2       mpt.layers_to_3dplot_interactive(f"{output_path}/{layer_subfolder}",
   103   2056.4 MiB      0.0 MiB           1                                        plot_w=True,
   104   2056.4 MiB      0.0 MiB           1                                        downsampling=downsampling_layers,
   105   2056.4 MiB      0.0 MiB           1                                        plotparams=interactiveparams,
   106   2056.4 MiB      0.0 MiB           1                                        sliceable=True)
   107                                         
   108                                             # Create interactive 3d plot for each individual sample
   109   2503.0 MiB      9.5 MiB           2       mpt.samples_to_3dplots_interactive(f"{output_path}/{sample_subfolder}",
   110   2493.5 MiB      0.0 MiB           1                                          plot_w=True,
   111   2493.5 MiB      0.0 MiB           1                                          downsampling=downsampling_samples,
   112   2493.5 MiB      0.0 MiB           1                                          plotparams=interactiveparams,
   113   2493.5 MiB      0.0 MiB           1                                          sliceable=True)
   114                                         
   115   2503.0 MiB      0.0 MiB           1       mpt.temp_data_to_csv(f"{output_path}/temp_data")


